# Help articles:
# - https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
# - https://boringrails.com/articles/building-a-rails-ci-pipeline-with-github-actions/
# - https://github.com/ruby/setup-ruby
name: tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests_v1:
    name: Tests
    runs-on: ubuntu-latest
    # services:
      # postgres:
      #   image: postgres:11
      #   env:
      #     POSTGRES_USER: myapp
      #     POSTGRES_DB: myapp_test
      #     POSTGRES_PASSWORD: ""
      #   ports: ["5432:5432"]
      # mysql:
      #   image: mysql:5.7
      #   env:
      #     MYSQL_DATABASE: sylvia_luchez_v3_backend_test
      #     MYSQL_USER: user
      #     MYSQL_PASSWORD:
      #     MYSQL_ROOT_PASSWORD:
      #   ports:
      #     - 33306:3306
      #   options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      RACK_ENV: test
      RAILS_ENV: test
      DB_USER: root
      DB_PASSWORD: root
      DB_DATABASE: sylvia_luchez_v3_backend_test

    steps:
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby and install gems
        uses: ruby/setup-ruby@v1
        # with:
        #   bundler-cache: true
        # can't use this part for now. Maybe the previous cache needs to expire first

      - name: Run bundler
        run: bundle install

      # - run: RAILS_ENV=test bundle install
          # key: ${{ runner.os }}-bundle-${{ hashFiles('Gemfile.lock') }}

      - name: Set up test database
        run: bin/rails db:setup

      - name: Run tests
        run: rspec
